<span class="opt">&lt;</span>? <span class="com">/* The Computer Language Benchmarks Game</span>
<span class="com">   https://salsa.debian.org/benchmarksgame-team/benchmarksgame/</span>
<span class="com">   </span>
<span class="com">   contributed by Isaac Gouy, transliterated from Mike Pall&apos;s Lua program </span>
<span class="com">*/</span>

<span class="kwa">function</span> <span class="kwd">Fannkuch</span><span class="opt">(</span><span class="kwc">$n</span><span class="opt">){</span>
   <span class="kwc">$p</span> <span class="opt">=</span> <span class="kwc">$q</span> <span class="opt">=</span> <span class="kwc">$s</span> <span class="opt">=</span> <span class="kwa">array</span><span class="opt">();</span> 
   <span class="kwc">$sign</span> <span class="opt">=</span> <span class="num">1</span><span class="opt">;</span> <span class="kwc">$maxflips</span> <span class="opt">=</span> <span class="kwc">$sum</span> <span class="opt">=</span> <span class="num">0</span><span class="opt">;</span> <span class="kwc">$m</span> <span class="opt">=</span> <span class="kwc">$n</span><span class="opt">-</span><span class="num">1</span><span class="opt">;</span>
   <span class="kwa">for</span> <span class="opt">(</span><span class="kwc">$i</span><span class="opt">=</span><span class="num">0</span><span class="opt">;</span> <span class="kwc">$i</span><span class="opt">&lt;</span><span class="kwc">$n</span><span class="opt">;</span> <span class="kwc">$i</span>++<span class="opt">){</span> <span class="kwc">$p</span><span class="opt">[</span><span class="kwc">$i</span><span class="opt">] =</span> <span class="kwc">$i</span><span class="opt">;</span> <span class="kwc">$q</span><span class="opt">[</span><span class="kwc">$i</span><span class="opt">] =</span> <span class="kwc">$i</span><span class="opt">;</span> <span class="kwc">$s</span><span class="opt">[</span><span class="kwc">$i</span><span class="opt">] =</span> <span class="kwc">$i</span><span class="opt">; }</span>      
   <span class="kwa">do</span> <span class="opt">{</span>
      <span class="slc">// Copy and flip.</span>
      <span class="kwc">$q0</span> <span class="opt">=</span> <span class="kwc">$p</span><span class="opt">[</span><span class="num">0</span><span class="opt">];</span>                                          <span class="slc">// Cache 0th element.</span>
      <span class="kwa">if</span> <span class="opt">(</span><span class="kwc">$q0</span> <span class="opt">!=</span> <span class="num">0</span><span class="opt">){</span>
         <span class="kwa">for</span><span class="opt">(</span><span class="kwc">$i</span><span class="opt">=</span><span class="num">1</span><span class="opt">;</span> <span class="kwc">$i</span><span class="opt">&lt;</span><span class="kwc">$n</span><span class="opt">;</span> <span class="kwc">$i</span>++<span class="opt">)</span> <span class="kwc">$q</span><span class="opt">[</span><span class="kwc">$i</span><span class="opt">] =</span> <span class="kwc">$p</span><span class="opt">[</span><span class="kwc">$i</span><span class="opt">];</span>            <span class="slc">// Work on a copy.</span>
         <span class="kwc">$flips</span> <span class="opt">=</span> <span class="num">1</span><span class="opt">;</span>
         <span class="kwa">do</span> <span class="opt">{</span> 
            <span class="kwc">$qq</span> <span class="opt">=</span> <span class="kwc">$q</span><span class="opt">[</span><span class="kwc">$q0</span><span class="opt">];</span> 
            <span class="kwa">if</span> <span class="opt">(</span><span class="kwc">$qq</span> <span class="opt">==</span> <span class="num">0</span><span class="opt">){</span>                                  <span class="slc">// ... until 0th element is 0.</span>
               <span class="kwc">$sum</span> +<span class="opt">=</span> <span class="kwc">$sign</span><span class="opt">*</span><span class="kwc">$flips</span><span class="opt">;</span>
	       <span class="kwa">if</span> <span class="opt">(</span><span class="kwc">$flips</span> <span class="opt">&gt;</span> <span class="kwc">$maxflips</span><span class="opt">)</span> <span class="kwc">$maxflips</span> <span class="opt">=</span> <span class="kwc">$flips</span><span class="opt">;</span>  <span class="slc">// New maximum?</span>
               <span class="kwa">break</span><span class="opt">;</span> 
            <span class="opt">}</span> 
 	    <span class="kwc">$q</span><span class="opt">[</span><span class="kwc">$q0</span><span class="opt">] =</span> <span class="kwc">$q0</span><span class="opt">;</span> 
	    <span class="kwa">if</span> <span class="opt">(</span><span class="kwc">$q0</span> <span class="opt">&gt;=</span> <span class="num">3</span><span class="opt">){</span>
	       <span class="kwc">$i</span> <span class="opt">=</span> <span class="num">1</span><span class="opt">;</span> <span class="kwc">$j</span> <span class="opt">=</span> <span class="kwc">$q0</span> <span class="opt">-</span> <span class="num">1</span><span class="opt">;</span>
               <span class="kwa">do</span> <span class="opt">{</span> <span class="kwc">$t</span> <span class="opt">=</span> <span class="kwc">$q</span><span class="opt">[</span><span class="kwc">$i</span><span class="opt">];</span> <span class="kwc">$q</span><span class="opt">[</span><span class="kwc">$i</span><span class="opt">] =</span> <span class="kwc">$q</span><span class="opt">[</span><span class="kwc">$j</span><span class="opt">];</span> <span class="kwc">$q</span><span class="opt">[</span><span class="kwc">$j</span><span class="opt">] =</span> <span class="kwc">$t</span><span class="opt">;</span> <span class="kwc">$i</span>++<span class="opt">;</span> <span class="kwc">$j</span><span class="opt">--; }</span> <span class="kwa">while</span> <span class="opt">(</span><span class="kwc">$i</span> <span class="opt">&lt;</span> <span class="kwc">$j</span><span class="opt">);</span> 
            <span class="opt">}</span>
	    <span class="kwc">$q0</span> <span class="opt">=</span> <span class="kwc">$qq</span><span class="opt">;</span> <span class="kwc">$flips</span>++<span class="opt">;</span>
         <span class="opt">}</span> <span class="kwa">while</span> <span class="opt">(</span><span class="kwa">true</span><span class="opt">);</span> 
      <span class="opt">}</span>
      <span class="slc">// Permute.</span>
      <span class="kwa">if</span> <span class="opt">(</span><span class="kwc">$sign</span> <span class="opt">==</span> <span class="num">1</span><span class="opt">){</span>
         <span class="kwc">$t</span> <span class="opt">=</span> <span class="kwc">$p</span><span class="opt">[</span><span class="num">1</span><span class="opt">];</span> <span class="kwc">$p</span><span class="opt">[</span><span class="num">1</span><span class="opt">] =</span> <span class="kwc">$p</span><span class="opt">[</span><span class="num">0</span><span class="opt">];</span> <span class="kwc">$p</span><span class="opt">[</span><span class="num">0</span><span class="opt">] =</span> <span class="kwc">$t</span><span class="opt">;</span> <span class="kwc">$sign</span> <span class="opt">= -</span><span class="num">1</span><span class="opt">;</span> <span class="slc">// Rotate 0&lt;-1.</span>
      <span class="opt">}</span> <span class="kwa">else</span> <span class="opt">{</span> 
         <span class="kwc">$t</span> <span class="opt">=</span> <span class="kwc">$p</span><span class="opt">[</span><span class="num">1</span><span class="opt">];</span> <span class="kwc">$p</span><span class="opt">[</span><span class="num">1</span><span class="opt">] =</span> <span class="kwc">$p</span><span class="opt">[</span><span class="num">2</span><span class="opt">];</span> <span class="kwc">$p</span><span class="opt">[</span><span class="num">2</span><span class="opt">] =</span> <span class="kwc">$t</span><span class="opt">;</span> <span class="kwc">$sign</span> <span class="opt">=</span> <span class="num">1</span><span class="opt">;</span>  <span class="slc">// Rotate 0&lt;-1 and 0&lt;-1&lt;-2.</span>
         <span class="kwa">for</span><span class="opt">(</span><span class="kwc">$i</span><span class="opt">=</span><span class="num">2</span><span class="opt">;</span> <span class="kwc">$i</span><span class="opt">&lt;</span><span class="kwc">$n</span><span class="opt">;</span> <span class="kwc">$i</span>++<span class="opt">){</span> 
	    <span class="kwc">$sx</span> <span class="opt">=</span> <span class="kwc">$s</span><span class="opt">[</span><span class="kwc">$i</span><span class="opt">];</span>
	    <span class="kwa">if</span> <span class="opt">(</span><span class="kwc">$sx</span> <span class="opt">!=</span> <span class="num">0</span><span class="opt">){</span> <span class="kwc">$s</span><span class="opt">[</span><span class="kwc">$i</span><span class="opt">] =</span> <span class="kwc">$sx</span><span class="opt">-</span><span class="num">1</span><span class="opt">;</span> <span class="kwa">break</span><span class="opt">; }</span>
	    <span class="kwa">if</span> <span class="opt">(</span><span class="kwc">$i</span> <span class="opt">==</span> <span class="kwc">$m</span><span class="opt">)</span> <span class="kwa">return array</span><span class="opt">(</span><span class="kwc">$sum</span><span class="opt">,</span><span class="kwc">$maxflips</span><span class="opt">);</span>     <span class="slc">// Out of permutations.</span>
	    <span class="kwc">$s</span><span class="opt">[</span><span class="kwc">$i</span><span class="opt">] =</span> <span class="kwc">$i</span><span class="opt">;</span>
	    <span class="slc">// Rotate 0&lt;-...&lt;-i+1.</span>
	    <span class="kwc">$t</span> <span class="opt">=</span> <span class="kwc">$p</span><span class="opt">[</span><span class="num">0</span><span class="opt">];</span> <span class="kwa">for</span><span class="opt">(</span><span class="kwc">$j</span><span class="opt">=</span><span class="num">0</span><span class="opt">;</span> <span class="kwc">$j</span><span class="opt">&lt;=</span><span class="kwc">$i</span><span class="opt">;</span> <span class="kwc">$j</span>++<span class="opt">){</span> <span class="kwc">$p</span><span class="opt">[</span><span class="kwc">$j</span><span class="opt">] =</span> <span class="kwc">$p</span><span class="opt">[</span><span class="kwc">$j</span>+<span class="num">1</span><span class="opt">]; }</span> <span class="kwc">$p</span><span class="opt">[</span><span class="kwc">$i</span>+<span class="num">1</span><span class="opt">] =</span> <span class="kwc">$t</span><span class="opt">;</span>
         <span class="opt">}</span>
      <span class="opt">}</span>
   <span class="opt">}</span> <span class="kwa">while</span> <span class="opt">(</span><span class="kwa">true</span><span class="opt">);</span>
<span class="opt">}</span>

<span class="kwc">$n</span> <span class="opt">=</span> <span class="kwc">$argv</span><span class="opt">[</span><span class="num">1</span><span class="opt">];</span>
<span class="kwa">list</span><span class="opt">(</span><span class="kwc">$checksum</span><span class="opt">,</span><span class="kwc">$pf</span><span class="opt">) =</span> <span class="kwd">Fannkuch</span><span class="opt">(</span><span class="kwc">$n</span><span class="opt">);</span>
<span class="kwd">printf</span><span class="opt">(</span><span class="str">&quot;</span><span class="ipl">%d\n</span><span class="str">Pfannkuchen(</span><span class="ipl">%d</span><span class="str">) =</span> <span class="ipl">%d</span><span class="str">&quot;</span><span class="opt">,</span> <span class="kwc">$checksum</span><span class="opt">,</span> <span class="kwc">$n</span><span class="opt">,</span> <span class="kwc">$pf</span><span class="opt">);</span>
?<span class="opt">&gt;</span>

