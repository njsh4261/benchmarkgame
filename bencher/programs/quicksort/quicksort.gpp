#include <iostream>
#include <cstdlib>
#include <fstream>
#include <string>
#include <sstream>

using namespace std;

void swap(int* array, int index1, int index2){
    int temp = array[index1];
    array[index1] = array[index2];
    array[index2] = temp;
}

int partition(int* array, int begin, int end) {
    int smaller_end = begin-1;
    for(int larger_end = begin; larger_end < end; larger_end++){
        if(array[larger_end] <= array[end]){ // the last one is the pivot
            swap(array, ++smaller_end, larger_end);
        }
    }
    swap(array, ++smaller_end, end);
    return smaller_end;
}

void quicksort(int *array, int begin, int end) {
    if(begin < end){
        int split = partition(array, begin, end);
        quicksort(array, begin, split-1);
        quicksort(array, split+1, end);
    }
}

int main(int argc, char **argv) {

    // parse input from stdin (problem size)
    string file_in;
    getline(cin, file_in);
    int size = stoi(file_in);

    // read an array of integer to sort
    getline(cin, file_in);
    stringstream ss(file_in);
    string token;
    int* int_array = new int[size];
    int i=0;
    while(getline(ss, token, ' ')){
        int_array[i++] = stoi(token);
    }
    quicksort(int_array, 0, size-1);

    delete int_array;
}